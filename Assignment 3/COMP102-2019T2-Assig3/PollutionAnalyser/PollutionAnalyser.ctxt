#BlueJ class context
comment0.target=PollutionAnalyser
comment0.text=\r\n\ The\ program\ contains\ two\ methods\ for\ analysing\ hourly\ Nitrogen\ Dioxide\ air\ pollution\ levels\ over\r\n\ the\ course\ of\ a\ day.\ There\ are\ several\ things\ about\ the\ pollution\ level\ that\r\n\ a\ user\ may\ be\ interested\ in\:\r\n\ \ \ \ The\ average\ pollution\ level\ during\ the\ day.\r\n\ \ \ \ How\ the\ pollution\ rose\ and\ fell.\r\n\ \ \ \ The\ maximum\ and\ the\ minimum\ pollution\ level\ at\ any\ point\ during\ the\ day.\r\n\ \ \ \ Any\ times\ when\ the\ pollution\ level\ went\ over\ the\ danger\ threshold.\r\n\ \ \ \ Whether\ the\ pollution\ level\ was\ over\ the\ danger\ threshold\ for\ more\ than\ 50%\ of\ the\ day.\r\n\ \ \ \ The\ median\ pollution\ value\ of\ a\ day.\r\n\r\n\r\n
comment1.params=
comment1.target=void\ analyse()
comment1.text=\r\n\ analyse()\ method\ reads\ a\ sequence\ of\ levels\ from\ the\ user\ and\ calls\ 6\ methods\r\n\ which\ each\ do\ one\ part\ of\ the\ analysis.\r\n\r\n\ [Core]\r\n\ \ \ -\ printAverage\ method\ which\ computes\ and\ prints\ out\ the\ average\ of\ the\ pollution\ levels.\r\n\ \ \ -\ printDangerLevels\ method\ which\ prints\ out\ all\ the\ values\ where\ the\ pollution\ level\ is\r\n\ \ \ \ \ above\ the\ danger\ threshold\ (120\ ppb).\r\n\ [Completion]\r\n\ \ \ -\ maximumOfList\ method\ which\ finds\ and\ returns\ the\ maximum\ levels\ in\ the\ list.\r\n\ \ \ -\ minimumOfList\ method\ which\ finds\ and\ returns\ the\ minimum\ levels\ in\ the\ list.\r\n\ \ \ -\ reportDanger\ method\ which\ calculates\ if\ the\ pollution\ level\ was\ above\ the\ danger\r\n\ \ \ \ \ threshold\ continuously\ for\ more\ than\ half\ (50%)\ of\ the\ readings,\ and\ what\ fraction\r\n\ \ \ \ \ of\ the\ readings\ were\ above\ that\ level.\r\n\ [Challenge]\r\n\ \ \ -\ medianOfList\ method\ that\ will\ compute\ and\ return\ the\ median\ value\ in\ the\ list.\r\n
comment10.params=levels
comment10.target=void\ plotLevelsCompletion(java.util.ArrayList)
comment11.params=
comment11.target=void\ setupGUI()
comment11.text=Make\ buttons\ to\ let\ the\ user\ run\ the\ methods
comment2.params=levels
comment2.target=void\ printAverage(java.util.ArrayList)
comment2.text=\ Print\ the\ average\ of\ the\ pollution\ levels\r\n\ \ \ -\ There\ is\ guaranteed\ to\ be\ at\ least\ one\ level,\r\n\ \ \ -\ The\ method\ will\ need\ a\ variable\ to\ keep\ track\ of\ the\ sum,\ which\r\n\ \ \ \ \ needs\ to\ be\ initialised\ to\ an\ appropriate\ value.\r\n\ \ CORE\r\n
comment3.params=levels
comment3.target=void\ printDangerLevels(java.util.ArrayList)
comment3.text=\ Find\ and\ return\ all\ the\ values\ where\ the\ pollution\ level\ is\ above\ the\ danger\ threshold\ (120\ ppb).\r\n\ \ \ -\ There\ is\ guaranteed\ to\ be\ at\ least\ one\ level,\r\n\ \ \ -\ The\ method\ will\ need\ a\ variable\ to\ keep\ track\ of\ the\ counts\ of\ danger\ levels,\ which\r\n\ \ \ \ \ needs\ to\ be\ initialised\ to\ an\ appropriate\ value.\r\n\ \ CORE\r\n
comment4.params=levels
comment4.target=void\ reportDanger(java.util.ArrayList)
comment4.text=\r\n\ Find\ and\ calculates\ if\ the\ pollution\ level\ was\ above\ the\ danger\ threshold\r\n\ continuously\ for\ more\ than\ half\ (50%)\ of\ the\ readings,\ and\ what\ fraction\ of\r\n\ the\ readings\ were\ above\ that\ level.\r\n\r\n\ COMPLETION\r\n
comment5.params=levels
comment5.target=double\ maximumOfList(java.util.ArrayList)
comment5.text=\r\n\ Find\ and\ return\ the\ maximum\ level\ in\ the\ list\r\n\ \ -\ There\ is\ guaranteed\ to\ be\ at\ least\ one\ level,\r\n\ \ -\ The\ method\ will\ need\ a\ variable\ to\ keep\ track\ of\ the\ maximum,\ which\r\n\ \ \ \ needs\ to\ be\ initialised\ to\ an\ appropriate\ value.\r\n\ COMPLETION\r\n
comment6.params=levels
comment6.target=double\ minimumOfList(java.util.ArrayList)
comment6.text=\r\n\ Find\ and\ return\ the\ minimum\ level\ in\ the\ list\r\n\ \ -\ There\ is\ guaranteed\ to\ be\ at\ least\ one\ level,\r\n\ \ -\ The\ method\ will\ need\ a\ variable\ to\ keep\ track\ of\ the\ minimum,\ which\r\n\ \ \ \ needs\ to\ be\ initialised\ to\ an\ appropriate\ value.\r\n\ COMPLETION\r\n
comment7.params=levels
comment7.target=void\ plotLevels(java.util.ArrayList)
comment7.text=\r\n\ Plot\ a\ bar\ graph\ of\ the\ sequence\ of\ levels,\r\n\ using\ narrow\ rectangles\ whose\ heights\ are\ equal\ to\ the\ level.\r\n\ [Core]\r\n\ \ \ -\ Plot\ the\ bars.\r\n\ [Completion]\r\n\ \ \ -\ Draws\ a\ horizontal\ line\ for\ the\ x-axis\ (or\ baseline)\ without\ any\ labels.\r\n\ \ \ -\ Any\ level\ greater\ than\ 400\ should\ be\ plotted\ as\ if\ it\ were\ just\ 400,\ putting\ an\r\n\ \ \ \ \ \ \ \ \ asterisk\ ("*")\ above\ it\ to\ show\ that\ it\ has\ been\ cut\ off.\r\n\ [Challenge\:]\r\n\ \ \ -\ The\ graph\ should\ also\ have\ labels\ on\ the\ axes,\ roughly\ every\ 50\ pixels.\r\n\ \ \ -\ The\ graph\ should\ also\ draw\ pollution\ levels\ over\ the\ danger\ threshold\ in\ red.\r\n\ \ \ -\ Scale\ the\ y-axis\ so\ that\ the\ maximum\ level\ would\ reach\ just\ to\ the\ top\ of\ the\ graph.\r\n\ \ \ -\ Scale\ the\ x-axis\ so\ that\ all\ the\ bars\ fit\ in\ the\ window.\r\n\ \ \ -\ Compute\ the\ standard\ deviation\ (sd)\ and\ show\ the\ mean\ and\ 1sd\ on\ the\ plot.\r\n
comment8.params=levels
comment8.target=void\ MedianList(java.util.ArrayList)
comment9.params=levels
comment9.target=void\ StandardDeviation(java.util.ArrayList)
numComments=12
