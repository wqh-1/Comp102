#BlueJ class context
comment0.target=Frog
comment0.text=\ Frog\r\n\ \ A\ new\ frog\ starts\ at\ the\ given\ position,\ with\ the\ given\ direction,\ and\ \r\n\ \ \ \ \ has\ either\ a\ "light"\ or\ "dark"\ shade.\r\n\ \ Frogs\ can\ turn\ in\ 4\ directions\:\ left,\ right,\ up,\ and\ down.\ \r\n\ \ Frogs\ move\ around\ at\ a\ constant\ speed\ in\ an\ arena\ with\ an\ enclosing\ wall,\r\n\ \ \ \ \ following\ its\ direction,\ until\ it\ hits\ a\ wall.\ In\ which\ case\ it\ stops\ moving.\r\n\ \ Frog\ can\ grow\ in\ size,\ and\ (for\ the\ completion)\ can\ also\ shrink\ by\ resetting\ their\ size\r\n\ \ \ \ \ \ to\ the\ orginal\ value.\r\n\r\n\ \ The\ walls\ of\ the\ arena\ are\ determined\ by\ the\ constants\:\r\n\ \ \ \ FrogGame.TOP_WALL,\ FrogGame.BOT_WALL,\ FrogGame.LEFT_WALL\ and\ FrogGame.RIGHT_WALL\r\n
comment1.params=left\ top\ dir\ shade
comment1.target=Frog(double,\ double,\ java.lang.String,\ java.lang.String)
comment1.text=\ \r\n\ Make\ a\ new\ frog\r\n\ The\ parameters\ specify\ the\ initial\ position\ of\ the\ top\ left\ corner,\r\n\ \ \ the\ direction,\ and\ the\ shade\ of\ the\ Frog\ ("light"\ or\ "dark")\r\n\ We\ assume\ that\ the\ position\ is\ within\ the\ boundaries\ of\ the\ arena\r\n
comment10.params=
comment10.target=void\ draw()
comment10.text=\r\n\ Draws\ the\ frog\ at\ the\ current\ position\ and\ the\ current\ size.\r\n\ Use\ the\ correct\ image\ file\ (darkfrog.jpg\ or\ lightfrog.jpg)\r\n
comment2.params=
comment2.target=void\ turnRight()
comment2.text=\r\n\ Turn\ right\ \ (don't\ redraw)\r\n
comment3.params=
comment3.target=void\ turnLeft()
comment3.text=\r\n\ Turn\ left\ \ (don't\ redraw)\r\n
comment4.params=
comment4.target=void\ turnUp()
comment4.text=\r\n\ Turn\ up\ \ (don't\ redraw)\r\n
comment5.params=
comment5.target=void\ turnDown()
comment5.text=\r\n\ Turn\ down\ \ (don't\ redraw)\r\n
comment6.params=
comment6.target=void\ move()
comment6.text=\r\n\ Moves\ the\ frog\:\ \r\n\ \ \ use\ SPEED\ unit\ forward\ in\ the\ correct\ direction\r\n\ \ \ by\ changing\ the\ position\ of\ the\ frog.\r\n\ Make\ sure\ that\ the\ frog\ does\ not\ go\ outside\ the\ arena,\ by\ making\ sure\ \r\n\ \ -\ the\ top\ of\ the\ frog\ is\ never\ smaller\ than\ FrogGame.TOP_WALL\r\n\ \ -\ the\ bottom\ of\ the\ frog\ is\ never\ greater\ than\ FrogGame.BOT_WALL\r\n\ \ -\ the\ left\ of\ the\ frog\ is\ never\ smaller\ than\ FrogGame.LEFT_WALL\r\n\ \ -\ the\ right\ of\ the\ frog\ is\ never\ greater\ than\ FrogGame.RIGHT_WALL\r\n\ \ DO\ NOT\ REDRAW\ THE\ FROG\!\!\!\r\n
comment7.params=x\ y
comment7.target=boolean\ touching(double,\ double)
comment7.text=\r\n\ Check\ whether\ the\ frog\ is\ touching\ the\ given\ point,\ eg,\ whether\ the\r\n\ \ \ given\ point\ is\ included\ in\ the\ area\ covered\ by\ the\ frog.\r\n\ Return\ true\ if\ the\ frog\ is\ on\ the\ top\ of\ the\ position\ (x,\ y)\r\n\ Return\ false\ otherwise\r\n
comment8.params=
comment8.target=void\ grow()
comment8.text=\r\n\ The\ Frog\ has\ just\ eaten\ a\ bug\r\n\ Makes\ the\ frog\ grow\ larger\ by\ GROWTH_RATE.\r\n
comment9.params=
comment9.target=void\ shrink()
comment9.text=\r\n\ The\ Frog\ has\ just\ bumped\ into\ a\ snake\r\n\ Makes\ the\ frog\ size\ reset\ to\ its\ original\ size\r\n\ ONLY\ NEEDED\ FOR\ COMPLETION\r\n
numComments=11
