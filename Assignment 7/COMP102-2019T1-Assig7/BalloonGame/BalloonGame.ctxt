#BlueJ class context
comment0.target=BalloonGame
comment0.text=\ Program\ for\ a\ simple\ game\ in\ which\ the\ player\ has\ to\ blow\ up\ balloons\r\n\ \ \ on\ the\ screen.\r\n\ \ The\ game\ starts\ with\ a\ collection\ of\ randomly\ placed\ small\ balloons\r\n\ \ \ \ (coloured\ circles)\ on\ the\ graphics\ pane.\r\n\ \ The\ player\ then\ clicks\ on\ balloons\ to\ blow\ them\ up\ by\ a\ small\ amount\r\n\ \ \ (randomly\ increases\ the\ radius\ between\ 2\ and\ 6\ pixels).\r\n\ \ If\ an\ expanded\ balloon\ touches\ another\ balloon,\ then\ they\ both\ "burst"\ and\ go\ grey.\r\n\ \ The\ goal\ is\ to\ get\ the\ largest\ score.\ The\ score\ is\ the\ total\ of\ the\r\n\ \ \ sizes\ (areas)\ of\ all\ the\ active\ balloons,\ minus\ the\ total\ size\ of\ all\r\n\ \ \ the\ burst\ balloons.\r\n\ \ At\ each\ step,\ the\ current\ score\ is\ recalculated\ and\ displayed,\r\n\ \ \ along\ with\ the\ highest\ score\ that\ the\ player\ has\ achieved\ so\ far.\r\n\ \ At\ any\ time,\ the\ player\ may\ choose\ to\ stop\ and\ "lock\ in"\ their\ score.\r\n\r\n\ \ The\ BalloonGame\ class\ has\ a\ field\ containing\ an\ Arraylist\ of\ Balloon\ objects\r\n\ \ \ to\ represent\ the\ current\ set\ of\ Balloons\ on\ the\ screen.\r\n\ \ It\ has\ a\ field\ to\ hold\ the\ highest\ score.\r\n\r\n\ \ The\ New\ Game\ button\ should\ start\ a\ new\ game.\r\n\ \ The\ Lock\ Score\ button\ should\ finish\ the\ current\ game,\ updating\ the\ highest\ score\r\n\r\n\ \ Clicking\ (ie,\ releasing)\ the\ mouse\ on\ the\ graphics\ pane\ is\ the\ main\ "action"\r\n\ \ of\ the\ game.\ The\ action\ should\ do\ the\ following\r\n\ \ \ \ Find\ out\ if\ the\ mouse\ was\ clicked\ on\ top\ of\ any\ balloon.\r\n\ \ \ \ If\ so,\r\n\ \ \ \ \ \ Make\ the\ balloon\ a\ bit\ larger\ and\ redraw\ it.\r\n\ \ \ \ \ \ Check\ whether\ the\ balloon\ is\ touching\ any\ other\ balloon.\r\n\ \ \ \ \ \ If\ so\r\n\ \ \ \ \ \ \ \ \ burst\ the\ two\ balloons\ (which\ will\ make\ them\ go\ grey)\r\n\ \ \ \ \ \ \ \ \ redraw\ the\ burst\ Balloons\r\n\ \ \ \ \ \ Recalculate\ and\ redisplay\ the\ score\r\n\ \ \ If\ all\ the\ balloons\ are\ gone,\ the\ game\ is\ over.\r\n\ \ \ \ \r\n\ \ \ To\ start\ a\ game,\ the\ program\ should\r\n\ \ \ \ \ \ \ Clear\ the\ graphics\ pane\r\n\ \ \ \ \ \ \ Initialise\ the\ score\ information\r\n\ \ \ \ \ \ \ Make\ a\ new\ list\ of\ Balloons\ at\ random\ positions\r\n\ \ \ \ \ \ \ Print\ a\ message\ \r\n\r\n\ \ \ If\ the\ game\ is\ over,\ the\ program\ should\r\n\ \ \ \ \ \ Update\ the\ highest\ score\ if\ the\ current\ score\ is\ better,\r\n\ \ \ \ \ \ Print\ a\ message\ reporting\ the\ scores,\r\n\ \ \ \ \ \ Start\ a\ new\ game.\r\n\ \ \ \ \ \r\n\ \ \ There\ are\ lots\ of\ ways\ of\ designing\ the\ program.\ It\ is\ not\ a\ good\ idea\r\n\ \ \ to\ try\ to\ put\ everything\ into\ one\ big\ method.\r\n\ \ \ \ \ \ \ \ \r\n\ \ Note\ that\ the\ Balloon\ class\ is\ written\ for\ you.\ Make\ sure\ that\ you\ know\r\n\ \ \ all\ its\ methods\ -\ no\ marks\ for\ redoing\ code\ that\ is\ given\ to\ you.\r\n\ \ \ \ \r\n
comment1.params=
comment1.target=void\ restartGame()
comment1.text=\ Start\ the\ game\:\r\n\ \ Clear\ the\ graphics\ pane\r\n\ \ Initialise\ the\ score\ information\ \r\n\ \ Make\ a\ new\ set\ of\ Balloons\ at\ random\ positions\r\n
comment2.params=action\ x\ y
comment2.target=void\ doMouse(java.lang.String,\ double,\ double)
comment2.text=\r\n\ Main\ game\ action\:\r\n\ \ Find\ the\ balloon\ at\ (x,y)\ if\ any,\r\n\ \ Expand\ it\ \r\n\ \ Check\ whether\ it\ is\ touching\ another\ balloon,\r\n\ \ If\ so,\ update\ the\ penalty,\ burst\ both\ balloons,\ and\ remove\ them\ from\ the\ list\r\n\ \ Report\ the\ score.\r\n\ \ If\ there\ are\ no\ active\ balloons\ left,\ end\ the\ game.\r\n
comment3.params=x\ y
comment3.target=Balloon\ findBalloonOn(double,\ double)
comment4.params=balloon
comment4.target=Balloon\ findTouching(Balloon)
comment5.params=
comment5.target=int\ calculateScore()
comment6.params=
comment6.target=boolean\ allBalloonsBurst()
comment7.params=
comment7.target=void\ endGame()
comment8.params=arguments
comment8.target=void\ main(java.lang.String[])
comment8.text=\r\n\ Main\:\ \ set\ up\ the\ GUI\r\n
numComments=9
