#BlueJ class context
comment0.target=DominoGame
comment0.text=\r\n\ \ Lets\ a\ player\ play\ a\ simple\ Solitaire\ dominoes\ game.\r\n\ \ Dominoes\ are\ rectangular\ tiles\ with\ two\ numbers\ from\ 0\ to\ 6\ on\r\n\ \ them\ (shown\ with\ dots).\r\n\ \ The\ player\ has\ a\ "hand"\ which\ can\ contain\ up\ to\ six\ dominoes.\r\n\ \ They\ can\ reorder\ the\ dominoes\ in\ their\ hand,\ they\ can\ place\ dominoes\r\n\ \ from\ their\ hand\ onto\ the\ table,\ and\ they\ can\ pick\ up\ more\ dominoes\ from\r\n\ \ a\ bag\ to\ fill\ the\ gaps\ in\ their\ "hand".\r\n\ \ The\ core\ and\ completion\ do\ not\ involve\ any\ of\ the\ matching\ and\ scoring\r\n\ \ of\ real\ dominoes\ games.\ \r\n\r\n\ \ PROGRAM\ DESIGN\r\n\ \ The\ dominoes\ are\ represented\ by\ objects\ of\ the\ Domino\ class.\r\n\ \ The\ Domino\ constructor\ will\ construct\ a\ new,\ random\ domino.\r\n\ \ Dominos\ have\ a\ draw(double\ x,\ double\ y)\ method\ that\ will\ draw\ the\r\n\ \ Domino\ on\ the\ graphics\ pane\ at\ the\ specified\ position.\r\n\ \ \r\n\ \ The\ program\ has\ two\ key\ fields\:\r\n\ \ \ \ hand\:\ \ an\ array\ that\ can\ hold\ 6\ Dominos.\ \r\n\ \ \ \ table\:\ an\ ArrayList\ of\ the\ Dominos\ that\ have\ been\ placed\ on\ the\ table.\r\n\ \ \ \ \r\n\ \ The\ hand\ should\ be\ displayed\ near\ the\ top\ of\ the\ Graphics\ pane\ with\ a\r\n\ \ \ rectangular\ border\ and\ each\ domino\ drawn\ at\ its\ place\ in\ the\ hand.\r\n\ \ Empty\ spaces\ in\ the\ hand\ should\ be\ represented\ by\ nulls\ and\ displayed\ as\ empty.\r\n\r\n\ \ The\ user\ can\ select\ a\ position\ on\ the\ hand\ using\ the\ mouse.\r\n\ \ The\ selected\ domino\ (or\ empty\ space)\ should\ be\ highlighted\ with\r\n\ \ a\ border\ around\ it.\r\n\ \ \r\n\ \ The\ user\ can\ use\ the\ "Left"\ or\ "Right"\ button\ to\ move\ the\ selected\ domino\r\n\ \ (or\ the\ space)\ to\ the\ left\ or\ the\ right,\ in\ which\ case\ the\ domino\ is\r\n\ \ swapped\ with\ the\ contents\ of\ the\ adjacent\ position\ in\ the\ hand.\r\n\ \ If\ the\ selected\ position\ contains\ a\ domino,\ the\ user\r\n\ \ can\ use\ the\ "Place"\ button\ to\ move\ the\ selected\ domino\ to\ the\ table.\r\n\ \ \r\n\ \ If\ there\ are\ any\ empty\ positions\ on\ the\ hand,\ the\ user\ can\ use\ the\r\n\ \ "Pickup"\ button\ to\ get\ a\ new\ (random)\ domino\ which\ will\ be\ added\ to\r\n\ \ the\ hand\ at\ the\ leftmost\ empty\ position.\r\n\r\n\ \ The\ table\ is\ represented\ by\ an\ ArrayList\ of\ dominos.\r\n\ \ At\ the\ beginning\ of\ the\ game\ the\ table\ should\ be\ empty.\r\n\ \ Dominos\ should\ be\ added\ to\ the\ end\ of\ the\ table.\r\n\ \ The\ table\ should\ be\ displayed\ in\ rows\ at\ the\ top\ of\ the\ graphics\ pane.\r\n
comment1.params=
comment1.target=void\ restart()
comment1.text=\r\n\ Restart\ the\ game\:\r\n\ \ set\ the\ table\ to\ be\ empty,\r\n\ \ set\ the\ hand\ to\ have\ no\ dominos\r\n
comment10.params=action\ x\ y
comment10.target=void\ doMouse(java.lang.String,\ double,\ double)
comment10.text=\ Allows\ the\ user\ to\ select\ a\ position\ in\ the\ hand\ using\ the\ mouse.\r\n\ If\ the\ mouse\ is\ released\ over\ the\ hand,\ then\ sets\ \ selectedPos\r\n\ to\ be\ the\ index\ into\ the\ hand\ array.\r\nRedraws\ the\ hand\ and\ table
comment11.params=
comment11.target=void\ redraw()
comment11.text=\r\n\ \ Redraw\ the\ table\ and\ the\ hand.\r\n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ pickup()
comment2.text=\r\n\ If\ there\ is\ at\ least\ one\ empty\ position\ on\ the\ hand,\ then\r\n\ create\ a\ new\ random\ domino\ and\ put\ it\ into\ the\ first\ empty\r\n\ position\ on\ the\ hand.\r\n\ (needs\ to\ search\ along\ the\ array\ for\ an\ empty\ position.)\r\n
comment3.params=
comment3.target=void\ drawHand()
comment3.text=\r\n\ Draws\ the\ outline\ of\ the\ hand,\r\n\ draws\ all\ the\ Dominos\ in\ the\ hand,\r\n\ highlights\ the\ selected\ position\ in\ some\ way\r\n\ This\ needs\ to\ use\ the\ constants\:\r\n\ \ \ DOMINO_SPACING,\ DOMINO_HEIGHT,\ HAND_LEFT,\ HAND_TOP\r\n
comment4.params=
comment4.target=void\ placeDomino()
comment4.text=\r\n\ Move\ domino\ from\ selected\ position\ on\ hand\ (if\ there\ is\ domino\ there)\ to\ the\ table\r\n\ The\ selectedPos\ field\ contains\ the\ index\ of\ the\ selected\ domino.\r\n
comment5.params=
comment5.target=void\ drawTable()
comment5.text=\r\n\ Draws\ the\ list\ of\ Dominos\ on\ the\ table,\ 7\ to\ a\ row\r\n\ Note,\ has\ to\ wrap\ around\ to\ a\ new\ row\ when\ it\ gets\ to\ the\r\n\ edge\ of\ the\ table\r\n\ This\ needs\ to\ use\ the\ constants\:\r\n\ \ \ DOMINO_SPACING,\ DOMINO_HEIGHT,\ TABLE_LEFT,\ TABLE_TOP\r\n
comment6.params=
comment6.target=void\ flipDomino()
comment6.text=\r\n\ If\ there\ is\ a\ domino\ at\ the\ selected\ position\ in\ the\ hand,\ \r\n\ flip\ it\ over.\r\n
comment7.params=
comment7.target=void\ moveLeft()
comment7.text=\r\n\ Swap\ the\ contents\ of\ the\ selected\ position\ on\ hand\ with\ the\r\n\ position\ on\ its\ left\ (if\ there\ is\ such\ a\ position)\r\n\ and\ also\ decrement\ the\ selected\ position\ to\ follow\ the\ domino\ \r\n
comment8.params=
comment8.target=void\ moveRight()
comment8.text=\r\n\ Swap\ the\ contents\ of\ the\ selected\ position\ on\ hand\ with\ the\r\n\ \ position\ on\ its\ right\ (if\ there\ is\ such\ a\ position)\r\n\ \ and\ also\ increment\ the\ selected\ position\ to\ follow\ the\ domino\ \r\n
comment9.params=
comment9.target=void\ suggestDomino()
comment9.text=\r\n\ If\ the\ table\ is\ empty,\ only\ a\ double\ (left\ and\ right\ the\ same)\ can\ be\ suggested.\r\n\ If\ the\ table\ is\ not\ empty,\ see\ if\ one\ domino\ has\ a\ number\ that\ matches\ the\ right\ \r\n\ \ \ \ number\ of\ the\ last\ domino\ on\ the\ table.\r\n
numComments=13
