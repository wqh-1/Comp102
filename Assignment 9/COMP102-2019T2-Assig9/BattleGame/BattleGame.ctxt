#BlueJ class context
comment0.target=BattleGame
comment0.text=\r\n\ \ Lets\ a\ player\ play\ a\ two-player\ card\ game\ (a\ modified\ version\ of\ Battle).\r\n\ \ The\ player\ takes\ up\ to\ 5\ cards\ to\ form\ a\ hand\ of\ cards.\ \r\n\ \ The\ player\ can\ reorder\ the\ cards\ in\ their\ hand,\ they\ can\ place\ cards\r\n\ \ from\ their\ hand\ onto\ the\ table,\ and\ they\ can\ pick\ up\ more\ cards\ from\ the\ deck\ of\ cards\r\n\ \ to\ fill\ the\ gaps\ in\ their\ "hand".\r\n\ \ For\ each\ battle,\ the\ player\ chooses\ a\ card\ from\ their\ hand\ to\ put\ on\ the\ table.\r\n\ \ The\ other\ player\ is\ controlled\ by\ the\ computer,\ who\ will\ simply\ take\ the\ top\ card\ from\ the\ deck.\r\n\r\n\ \ PROGRAM\ DESIGN\r\n\ \ The\ cards\ are\ represented\ by\ objects\ of\ the\ Card\ class.\r\n\ \ The\ Card\ constructor\ will\ construct\ a\ new\ card\ of\ the\ given\ suit\ and\ rank.\r\n\ \ Cards\ have\ a\ draw(double\ left,\ double\ top)\ method\ that\ will\ draw\ the\r\n\ \ Card\ on\ the\ graphics\ pane\ at\ the\ specified\ position.\r\n\ \ the\ Card\ class\ has\ a\ method\ that\ returns\ an\ ArrayList\ containing\ a\ shuffled\ deck\ of\ 52\ cards.\r\n\ \ \r\n\ \ The\ program\ has\ three\ key\ fields\:\r\n\ \ \ \ deck\:\ \ an\ ArrayList\ containing\ a\ shuffled\ deck\ of\ 52\ cards.\r\n\ \ \ \ hand\:\ \ an\ array\ that\ can\ hold\ 5\ Cards.\ \r\n\ \ \ \ table\:\ an\ arrayList\ of\ the\ Cards\ that\ have\ been\ placed\ on\ the\ table.\r\n\ \ \ \ \r\n\ \ The\ hand\ should\ be\ displayed\ near\ the\ bottom\ of\ the\ Graphics\ pane\ with\ a\r\n\ \ \ rectangular\ border\ and\ each\ card\ drawn\ at\ its\ place\ in\ the\ hand.\r\n\ \ Empty\ spaces\ in\ the\ hand\ should\ be\ represented\ by\ nulls\ and\ displayed\ as\ empty.\r\n\r\n\ \ The\ user\ can\ select\ a\ position\ on\ the\ hand\ using\ the\ mouse.\r\n\ \ The\ selected\ card\ (or\ empty\ space)\ should\ be\ highlighted\ with\r\n\ \ a\ border\ around\ it.\r\n\ \ \r\n\ \ The\ user\ can\ use\ the\ "Left"\ or\ "Right"\ button\ to\ move\ the\ selected\ card\r\n\ \ (or\ the\ space)\ to\ the\ left\ or\ the\ right,\ in\ which\ case\ the\ card\ is\r\n\ \ swapped\ with\ the\ contents\ of\ the\ adjacent\ position\ in\ the\ hand.\r\n\ \ If\ the\ selected\ position\ contains\ a\ card,\ the\ user\r\n\ \ can\ use\ the\ "Battle"\ button\ to\ move\ the\ selected\ card\ on\ the\ table\ and\ initiate\ a\ battle.\r\n\ \ \r\n\ \ If\ there\ are\ any\ empty\ positions\ in\ the\ hand,\ the\ user\ can\ use\ the\r\n\ \ "Pickup"\ button\ to\ get\ the\ top\ card\ from\ the\ deck\ which\ will\ be\ added\ to\r\n\ \ the\ hand\ at\ the\ leftmost\ empty\ position.\r\n\r\n\ \ The\ table\ is\ represented\ by\ an\ ArrayList\ of\ cards.\r\n\ \ At\ the\ beginning\ of\ the\ game\ the\ table\ should\ be\ empty,\ and\ the\ hand\r\n\ \ \ \ should\ have\ 5\ cards\r\n\ \ Cards\ should\ be\ added\ to\ the\ end\ of\ the\ table.\r\n\ \ The\ table\ should\ be\ displayed\ in\ rows\ at\ the\ top\ of\ the\ graphics\ pane.\r\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=\r\n\ Set\ up\ the\ user\ interface\r\n
comment10.params=action\ x\ y
comment10.target=void\ doMouse(java.lang.String,\ double,\ double)
comment10.text=\ \r\n\ Allows\ the\ user\ to\ select\ a\ position\ in\ the\ hand\ using\ the\ mouse.\r\n\ If\ the\ mouse\ is\ released\ over\ the\ hand,\ then\ sets\ \ selectedPos\r\n\ to\ be\ the\ index\ into\ the\ hand\ array.\r\n\ Redraws\ the\ hand\ and\ table\ \r\n
comment11.params=
comment11.target=void\ redraw()
comment11.text=\r\n\ \ Redraw\ the\ table\ and\ the\ hand.\r\n
comment12.params=
comment12.target=void\ endGame()
comment12.text=\r\n\ If\ game\ is\ over\ display\ who\ won.\r\n
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ restart()
comment2.text=\r\n\ CORE\r\n\ \r\n\ Restart\ the\ game\:\r\n\ \ get\ a\ shuffled\ deck,\r\n\ \ set\ the\ battle,\ compScore,\ playScore\ and\ remainingReplaces\ to\ their\ initial\ values\r\n\ \ set\ the\ table\ to\ be\ empty,\r\n\ \ set\ the\ hand\ to\ have\ NUM_HAND\ cards\r\n
comment3.params=
comment3.target=void\ pickupCard()
comment3.text=\r\n\ CORE\r\n\ \r\n\ If\ the\ deck\ is\ not\ empty\ and\ there\ is\ at\ least\ one\ empty\ position\ on\ the\ hand,\ then\r\n\ pick\ up\ the\ top\ card\ from\ the\ deck\ and\ put\ it\ into\ the\ first\ empty\ position\ on\ the\ hand.\r\n\ (needs\ to\ search\ along\ the\ array\ for\ an\ empty\ position.)\r\n
comment4.params=
comment4.target=void\ drawHand()
comment4.text=\r\n\ CORE\r\n\ \r\n\ Draws\ the\ outline\ of\ the\ hand,\r\n\ draws\ all\ the\ Cards\ in\ the\ hand,\r\n\ highlights\ the\ selected\ position\ in\ some\ way\r\n\r\n\ \ This\ needs\ to\ use\ the\ constants\:\r\n\ \ \ -\ CARD_SPACING,\ HAND_HEIGHT,\ HAND_LEFT,\ HAND_TOP\r\n\ \ \ See\ the\ descriptions\ where\ these\ fields\ are\ defined.\r\n
comment5.params=
comment5.target=void\ drawTable()
comment5.text=\r\n\ CORE\r\n\r\n\ Draws\ the\ list\ of\ Cards\ on\ the\ table\ in\ one\ long\ row.\r\n\ \ This\ needs\ to\ use\ the\ constants\:\r\n\ \ \ -\ CARD_SPACING,\ TABLE_LEFT,\ TABLE_TOP,\ CARD_HEIGHT\r\n\ \ \ See\ the\ descriptions\ where\ these\ fields\ are\ defined.\r\n\r\n\ COMPLETION\:\r\n\ \r\n\ Draws\ the\ list\ of\ Cards\ on\ the\ table,\ by\ pairs\ representing\ each\ battle\r\n\ For\ each\ pair\:\r\n\ -\ the\ computer\ card\ is\ placed\ on\ the\ top\ row\ and\ the\ player's\ car\ on\ the\ bottom\ row.\r\n\ -\ the\ card\ with\ the\ highest\ rank\ is\ outlined\r\n\ \r\n\ CHALLENGE\:\r\n\ \r\n\ For\ each\ battle,\r\n\ -\ the\ card\ with\ the\ highest\ rank\ is\ outlined\r\n\ \r\n\ Extend\ to\ correctly\ handle\ draws\ in\ a\ battle\r\n\ -\ Stack\ the\ secondary\ battle\ on\ top\ of\ the\ previous\ cards.\r\n\ \r\n
comment6.params=
comment6.target=void\ playBattle()
comment6.text=\r\n\ CORE\r\n\ \r\n\ Place\ card\ from\ selected\ position\ on\ hand\ (if\ there\ is\ a\ card\ there)\ to\ the\ table\r\n\ The\ selectedPos\ field\ contains\ the\ index\ of\ the\ selected\ card.\r\n\ If\ a\ card\ has\ been\ placed\ on\ the\ table,\ then\r\n\ -\ gets\ the\ top\ card\ from\ the\ deck\ for\ the\ computer\ player\ and\ places\ it\ to\ the\ table\r\n\ -\ compares\ the\ ranks\ of\ the\ two\ cards\ and\ award\ a\ point\ to\ the\ player\ with\ the\ highest\ card.\r\n\ \ \ For\ the\ core,\ neither\ player\ gets\ a\ point\ if\ it's\ a\ draw.\r\n\ -\ update\ the\ number\ of\ battles\ that\ have\ been\ played\r\n\ \r\n
comment7.params=
comment7.target=void\ replaceCard()
comment7.text=\r\n\ COMPLETION\r\n\ \r\n\ If\ there\ is\ a\ card\ at\ the\ selected\ position\ in\ the\ hand,\ \r\n\ replace\ it\ by\ another\ card.\r\n
comment8.params=
comment8.target=void\ moveLeft()
comment8.text=\r\n\ COMPLETION\r\n\r\n\ Swap\ the\ contents\ of\ the\ selected\ position\ on\ hand\ with\ the\r\n\ position\ on\ its\ left\ (if\ there\ is\ such\ a\ position)\r\n\ and\ also\ decrement\ the\ selected\ position\ to\ follow\ the\ card\ \r\n
comment9.params=
comment9.target=void\ moveRight()
comment9.text=\r\n\ COMPLETION\r\n\r\n\ Swap\ the\ contents\ of\ the\ selected\ position\ on\ hand\ with\ the\r\n\ \ position\ on\ its\ right\ (if\ there\ is\ such\ a\ position)\r\n\ \ and\ also\ increment\ the\ selected\ position\ to\ follow\ the\ card\ \r\n
numComments=14
